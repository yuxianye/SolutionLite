<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off" internalLogFile="c:\temp\nlog-internal.log">

  <!-- optional, add some variables
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
  <variable name="myvar" value="myvalue"/>

  <!--
  See https://github.com/nlog/nlog/wiki/Configuration-file
  for information on customizing logging rules and outputs.
   -->
  <targets>

    <!--
    add your targets here
    See https://github.com/nlog/NLog/wiki/Targets for possible targets.
    See https://github.com/nlog/NLog/wiki/Layout-Renderers for the possible layout renderers.
    -->

    <!--
    Write events to a file with the date in the filename.
    -->

    <!--添加一个新条目让日志输出到控制台中，并添加必要的输出布局（layout）-->
    <target name="console" xsi:type="Console" layout="${longdate} ${uppercase:${level}} ${threadid} ${message} ${callsite:fileName=true:skipFrames=1} ${onexception:${exception:format=tostring} ${newline} ${stacktrace:format=Raw:topFrames=5:skipFrames=1:}" />
    <!--说明 xsi:type="Console"指定输出到控制台；layout指定输出文件内容的样式 ${longdate}是日期（具体到毫秒），${level}是日志的等级；${message}是具体要输出的内容。-->

    <target xsi:type="File" name="file" fileName="${basedir}/logs/${shortdate}/${uppercase:${level}}.log"
            layout="${longdate} ${uppercase:${level}} ${threadid} ${message} ${callsite:fileName=true:skipFrames=1} ${onexception:${exception:format=tostring} ${newline} ${stacktrace:format=Raw:topFrames=5:skipFrames=1:}" />

    <!--connectionString ="Data Source=192.168.1.234;Initial Catalog=LogDb;user id=sa;password=Hy@2016;"-->
    <!--connectionString ="Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\SolutionLiteDb.mdf;Integrated Security=True;Connect Timeout=30;MultipleActiveResultSets=True;"-->
    <!--Data Source=192.168.1.234;Initial Catalog=SolutionLiteDb;User ID=sa;Password=Hy@2016-->
    <target name="database" xsi:type="Database"
         connectionString ="Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\SolutionLiteDb.mdf;Integrated Security=True;Connect Timeout=30;MultipleActiveResultSets=True;"
         commandText="INSERT INTO [dbo].[AppLog]([CreatedTime],[Level],[ThreadId],[Message],[CallSite],[Exception],[StackTrace])VALUES(@CreatedTime,@Level,@ThreadId,@Message,@CallSite,@Exception,@StackTrace);">

      <parameter name = "@CreatedTime" layout = "${longdate}"/>
      <!--<parameter name = "@Level" layout = "${uppercase:${level}}" />-->
      <parameter name = "@Level" layout = "${level}" />
      <parameter name = "@ThreadId" layout = "${threadid}" />
      <parameter name = "@Message" layout = "${message}"/>
      <parameter name = "@CallSite" layout = "${callsite:fileName=true:skipFrames=1}" />
      <parameter name = "@Exception" layout = "${onexception:${exception:format=tostring}" />
      <parameter name = "@StackTrace" layout = "${stacktrace:format=Raw:topFrames=5:skipFrames=1:}" />
      <!--<dbProvider>MySql.Data.MySqlClient</dbProvider>-->
      <dbProvider>System.Data.SqlClient</dbProvider>

    </target>
    <!--保存至文件-->
    <!--<target name="log_file" xsi:type="File"
                    fileName="${basedir}/logs/${shortdate}.log"
                    layout="${longdate} ${uppercase:${level}} ${message} ${onexception:${exception:format=tostring} ${newline} ${stacktrace} ${newline}" />-->
    <!--输出至Debugger-->
    <!--<target name="debugger" xsi:type="Debugger"
            layout="NLog: ${date:format=HH\:mm\:ss} | ${message}" />-->
    <!--输出至控制台-->
    <!--<target name="console" xsi:type="ColoredConsole" layout="${longdate} ${message} ${exception:format=tostring}"></target>-->
    <!--输出至邮件-->
    <!--<target xsi:type="Mail" name="infoMail"
          smtpServer="smtp.163.com"  
          smtpPort="25"  
          smtpAuthentication="Basic"  
          smtpUserName="deno@163.com"   
          smtpPassword="demo"  
          enableSsl="true"  
          addNewLines="true"  
          from="demo@163.com"  
          to="demo@qq.com"  
          subject="Project Exception Mail"
          header="*********************"  
          body="${longdate} | ${message} "
          footer="*********************"/>-->
  </targets>

  <rules>
    <!-- add your logging rules here -->

    <!--
    Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to "f"
     -->
    <logger name="*" minlevel="Debug" writeTo="file" />
    <logger name="*" minlevel="Debug" writeTo="console" />
    <logger name="*" minlevel="Debug" writeTo="database" />

    <!--<logger name="*" level="Info" writeTo="log_file" />-->
    <!--<logger name="*" levels="Error" writeTo="log_file" />-->
    <!--<logger name="*" levels="Debug" writeTo="log_file" />-->
    <!--<logger name="*" level="Debug" writeTo="debugger" />-->
    <!--<logger name="*" level="Fatal" writeTo="console" />-->
    <!--<logger name="*" level="Fatal" writeTo="log_file" />-->
    <!--<logger name="*" level="Warn" writeTo="infoMail" />-->
    <!--<logger name="*" level="Warn" writeTo="log_file" />-->

  </rules>
</nlog>

<!--https://nlog-project.org/config/?tab=layout-renderers-->
<!--${activityid}	将其置入日志System.Diagnostics trace 
${all-event-properties}	事件日志上下文
${appdomain}	当前应用程序域
${assembly-version}	应用程序
${basedir}	应用程序域的基本目录。
${callsite}	(类名称、方法名称和相关信息的源信息)。
${callsite-linenumber}	调用类的
${counter}	数值
${date}	当前日期和时间。
${document-uri}	用于Silverlight应用。
${environment}	环境变量
${event-properties}	 
${exception}	exception信息
${file-contents}	显示指定文件的内容
${gc}	垃圾收集器
${gdc}	诊断上下文
${guid}	GUID
${identity}	线程标识信息
${install-context}	安装参数
${level}	级别。
${literal}	 
${log4jxmlevent}	XML事件描述
${logger}	记录器的名字
${longdate}	日期和时间的格式分类yyyy-MM-dd HH:mm:ss.ffff。
${machinename}	名称
${mdc} 	映射诊断
${mdlc}	异步映射诊断上下文
${message}	消息
${ndc}	线程结构
${ndlc}	异步线程
${newline}	文字换行
${nlogdir}	nlog.dll目录。
${performancecounter}	述性能计数器。
${processid}	当前进程标识符
${processinfo}	运行信息
${processname}	当前进程的名称。
${processtime}	该时间过程中格式HH:MM:ss.mmm。
${qpc}	高精度定时器，基于返回的值从queryperformancecounter(任选地)转换为秒。
${registry}	从注册表中的值。
${sequenceid}	ID
${shortdate}	短时间 格式YYYY-MM-DD。
${sl-appinfo}	Silverlight应用。
${specialfolder}	文件夹路径
${stacktrace} -	堆栈跟踪渲染器。
${tempdir}	临时目录中。
${threadid}	当前线程的标识符。
${threadname}	当前线程。
${ticks}	当前日期和时间。
${time}	24小时格式HH:MM:ss.mmm。
${var}	{$var}-提供新的变量(4.1)
${windows-identity}	indows线程标识信息(用户名)-->
